#! /usr/bin/env python
#
#    Application dependencies management (pydeps)
#
#    Copyright (C) 2017 Cyrielle Camanes (sylicia) <cyrielle.camanes@gmail.com>
#
#    This file is part of pydeps
#
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of the GNU General Public License
#    as published by the Free Software Foundation; either version 2
#    of the License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, see <http://www.gnu.org/licenses/>.

"""graph_dot

Usage:
    graph_dot -h | --help
    graph_dot -t <project> -p <path> [-o <graph_path>]


Options:
    -h, --help                                  Show this screen.
    -t <project>, --target <project>            Project you want to focus on
    -p <projects_path>, --path <projects_path>  Path to projects YAML files
    -o <graph_path>, --output <graph_path>      Output in specified file
                                                [Default: stdout]
"""


import logging
import pydeps
from pydeps import dot


logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO)
logging.basicConfig(format='[%(levelname)s] - %(message)s')

if __name__ == '__main__':
    # Init variables from arguments
    from docopt import docopt

    arguments = docopt(__doc__)
    project_target = arguments['--target']
    projects_path = arguments['--path']
    dot_path = arguments['--output']

    # Load projects configuration
    try:
        pydeps.load_projects(projects_path)
    except pydeps.DependencyError as error:
        logger.critical(error)
        exit(2)

    # Check if project exists
    if project_target not in pydeps.PROJECTS:
        logger.critical("Project {0} not found".format(project_target))
        exit(1)

    dot.generate_detailed_graph(project_target)
